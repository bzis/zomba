<?php

namespace Vifeed\PlatformBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Vifeed\PlatformBundle\Entity\Platform;
use Vifeed\SystemBundle\Repository\DoctrineFilterTrait;
use Vifeed\UserBundle\Entity\User;

/**
 * PlatformRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlatformRepository extends EntityRepository
{
    use DoctrineFilterTrait;

    /**
     * @param User $user
     * @param bool $alsoDeleted
     *
     * @return Platform[]
     */
    public function findByUserIndexed(User $user, $alsoDeleted = false)
    {
        $alsoDeleted ? $this->disableSoftDeleteableFilter() : '';

        $qb = $this->getEntityManager()->createQueryBuilder();
        $query = $qb->select('c')
                    ->from('VifeedPlatformBundle:Platform', 'c', 'c.id')
                    ->where('c.user = :user')
                    ->setParameter('user', $user);

        $platforms = $query->getQuery()->getResult();

        $alsoDeleted ? $this->enableSoftDeleteableFilter() : '';

        return $platforms;
    }

}
